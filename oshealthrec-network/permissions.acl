/**
 *Regeln die den Patienten betreffen.
 */
 // Lese und Update Berechtigungen des Patienten
rule PatientReadUpdateOwn {
  description: "Grant Patient READ access to own profil."
  participant(p): "org.oshealthrec.network.Patient"
  operation: READ, UPDATE
  resource(v): "org.oshealthrec.network.Patient"
  condition: (v.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule PatientReadDoctor {
  description: "Allow patient to read and update doctor."
  participant: "org.oshealthrec.network.Patient"
  operation: READ
  resource: "org.oshealthrec.network.Doctor"
  action: ALLOW
}

// Regeln um den Patienten zum Patienten-Array des Doctors hinzuzufügen
rule DoctorAddPatientTransaction {
  description: "Allow patient create doctor_add_patient transaction."
  participant: "org.oshealthrec.network.Patient"
  operation: CREATE
  resource: "org.oshealthrec.network.doctor_add_patient"
  action: ALLOW
}

rule DoctorAddPatient {
  description: "Allow patient to write himself into the doctor's patient array."
  participant(p): "org.oshealthrec.network.Patient"
  operation: UPDATE
  resource(v): "org.oshealthrec.network.Doctor"
  transaction(tx): "org.oshealthrec.network.doctor_add_patient"
  condition: (tx.patient.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

// Regeln um den Doctor zum Doctors-Array des Patienten hinzuzufügen
rule PatientAddDoctorTransaction {
  description: "Allow patient create patient_add_doctor transaction."
  participant: "org.oshealthrec.network.Patient"
  operation: CREATE
  resource: "org.oshealthrec.network.patient_add_doctor"
  action: ALLOW
}

// Regeln um den Doctor aus dem Doctors-Array des Patienten zu entfernen
rule PatientDeleteDoctorTransaction {
  description: "Allow patient create patient_delete_doctor transaction."
  participant: "org.oshealthrec.network.Patient"
  operation: CREATE
  resource: "org.oshealthrec.network.patient_delete_doctor"
  action: ALLOW
}

rule DoctorDeletePatientTransaction {
  description: "Allow patient create doctor_delete_patient transaction."
  participant: "org.oshealthrec.network.Patient"
  operation: CREATE
  resource: "org.oshealthrec.network.doctor_delete_patient"
  action: ALLOW
}

rule DoctorDeletePatient {
  description: "Allow patient to delete himself from the doctor's patient array."
  participant(p): "org.oshealthrec.network.Patient"
  operation: UPDATE
  resource(v): "org.oshealthrec.network.Doctor"
  transaction(tx): "org.oshealthrec.network.doctor_delete_patient"
  condition: (tx.patient.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule PatientReadReport {
  description: "Allow patient to read his own reports."
  participant(p): "org.oshealthrec.network.Patient"
  operation: READ
  resource(v): "org.oshealthrec.network.Report"
  // Suche im Reports Array des Patienten nach dem Report
  condition: (
    p.reports.some(function (report) {
        return report.getIdentifier() === v.getIdentifier();
    })
  )
  action: ALLOW
}

/**
 * Regeln die den Doctor betreffen.
 */

// Lese-Berechtigungen des Doctors
rule DoctorReadDoctors {
  description: "Grant Doctor READ access to all doctors."
  participant: "org.oshealthrec.network.Doctor"
  operation: READ
  resource: "org.oshealthrec.network.Doctor"
  action: ALLOW
}

rule DoctorUpdateOwn {
  description: "Allow Doctor to update himself."
  participant(p): "org.oshealthrec.network.Doctor"
  operation: UPDATE
  resource(v): "org.oshealthrec.network.Doctor"
  condition: (v.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule DoctorReadHisPatients {
  description: "Grant Doctor READ access to his patients profil."
  participant(p): "org.oshealthrec.network.Doctor"
  operation: READ
  resource(v): "org.oshealthrec.network.Patient"
  // Suche im doctors Array des Patienten nach dem Doctor
  condition: (
    v.doctors.some(function (doctor) {
        return doctor.getIdentifier() === p.getIdentifier();
    })
  )
  action: ALLOW
}

rule DoctorReadEmployee {
  description: "Allow doctor to read and update employee."
  participant: "org.oshealthrec.network.Doctor"
  operation: READ
  resource: "org.oshealthrec.network.Employee"
  action: ALLOW
}

rule DoctorReadReport {
  description: "Allow doctor to read reports of his patients."
  participant(p): "org.oshealthrec.network.Doctor"
  operation: READ
  resource(v): "org.oshealthrec.network.Report"
  // Suche im Doctors Array des Patienten nach dem Doktor
  condition: (        
    v.owner.doctors.some(function (doctor) {            
      return doctor.getIdentifier() === p.getIdentifier();        
    })      
  )   
  action: ALLOW
}

// Regeln um den Employee in das Employee-Array des Doctors zu schreiben
rule DoctorAddEmployeeTransaction {
  description: "Allow doctor to create doctor_add_employee transaction."
  participant: "org.oshealthrec.network.Doctor"
  operation: CREATE
  resource: "org.oshealthrec.network.doctor_add_employee"
  action: ALLOW
}

// Regeln um den Employee aus dem Employee-Array des Doctors zu entfernen
rule DoctorDeleteEmployeeTransaction {
  description: "Allow doctor to create doctor_delete_employee transaction."
  participant: "org.oshealthrec.network.Doctor"
  operation: CREATE
  resource: "org.oshealthrec.network.doctor_delete_employee"
  action: ALLOW
}

// Regeln um dem Doctor zu erlauben einen Report zu erstellen
rule DoctorCreateAsset {    
  description: "Allow doctor to create an Asset."    
  participant: "org.oshealthrec.network.Doctor"    
  operation: CREATE    
  resource: "org.hyperledger.composer.system.AddAsset"    
  action: ALLOW
}

rule DoctorCreateReport {    
  description: "Allow doctor to create report"    
  participant: "org.oshealthrec.network.Doctor"    
  operation: CREATE    
  resource: "org.oshealthrec.network.Report"    
  action: ALLOW
}

// Regeln um dem Doctor zu erlauben einen Report dem Reports-Array des Patienten hinzuzufügen
rule DoctorAddReportforPatientTransaction {    
  description: "Allow doctor to create add_report_for_patient transaction."    
  participant: "org.oshealthrec.network.Doctor"    
  operation: CREATE    
  resource: "org.oshealthrec.network.add_report_for_patient"    
  action: ALLOW
}

rule DoctorAddReportforPatient {    
  description: "Allow doctor to write report into his patient´s reports array."    
  participant(p): "org.oshealthrec.network.Doctor"    
  operation: UPDATE    
  resource(v): "org.oshealthrec.network.Patient"    
  transaction(tx): "org.oshealthrec.network.add_report_for_patient" 
  // Suche im doctors Array des Patienten nach dem Doctor      
  condition: (        
    v.doctors.some(function (doctor) {            
      return doctor.getIdentifier() === p.getIdentifier();        
    })      
  )    
  action: ALLOW
}

/**
 * Regeln, die den Employee betreffen
 */
// Lese-Berechtigungen des Employees
rule EmployeeReadUpdateOwn {
  description: "Grant Patient READ access to own profil."
  participant(p): "org.oshealthrec.network.Employee"
  operation: READ, UPDATE
  resource(v): "org.oshealthrec.network.Employee"
  condition: (v.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule EmployeeReadDoctor {
  description: "Allow employee to read doctor."
  participant: "org.oshealthrec.network.Employee"
  operation: READ
  resource: "org.oshealthrec.network.Doctor"
  action: ALLOW
}

rule EmployeeReadHisPatients {
  description: "Grant Employee READ access to his doctors patients profil."
  participant(p): "org.oshealthrec.network.Employee"
  operation: READ
  resource(v): "org.oshealthrec.network.Patient"
  // Suche im doctors Array des Patienten nach dem Doctor
  condition: (
    v.doctors.some(function (doctor) {
      return doctor.employees.some(function (employee) {
        return employee.getIdentifier() === p.getIdentifier();
      })
    })
  )
  action: ALLOW
}

rule EmployeeReadReport {
  description: "Allow doctor to read reports of his doctor's patients."
  participant(p): "org.oshealthrec.network.Employee"
  operation: READ
  resource(v): "org.oshealthrec.network.Report"
  // Suche im doctors Array des Patienten nach dem Doctor      
  condition: (
    v.owner.doctors.some(function (doctor) {
      return doctor.employees.some(function (employee) {
        return employee.getIdentifier() === p.getIdentifier();
      })
    })
  )
  action: ALLOW
}

// Regeln zum Hinzufügen des Doctors zum Doctors-Array des Employees
rule EmployeeAddDoctorTransaction {
  description: "Allow Doctor to create employee_add_doctor transaction."
  participant: "org.oshealthrec.network.Doctor"
  operation: CREATE
  resource: "org.oshealthrec.network.employee_add_doctor"
  action: ALLOW
}

rule EmployeeAddDoctor {
  description: "Allow Doctor to write himself into the employee´s doctor array."
  participant: "org.oshealthrec.network.Doctor"
  operation: UPDATE
  resource: "org.oshealthrec.network.Employee"
  transaction: "org.oshealthrec.network.employee_add_doctor"
  action: ALLOW
}

// Regeln zum Entfernen des Doctors aus dem Doctors-Array des Employees
rule EmployeeDeleteDoctorTransaction {
  description: "Allow Doctor to create employee_delete_doctor transaction."
  participant: "org.oshealthrec.network.Doctor"
  operation: CREATE
  resource: "org.oshealthrec.network.employee_delete_doctor"
  action: ALLOW
}

rule EmployeeDeleteDoctor {
  description: "Allow Doctor to delete himself from the employee´s doctor array."
  participant: "org.oshealthrec.network.Doctor"
  operation: UPDATE
  resource: "org.oshealthrec.network.Employee"
  transaction: "org.oshealthrec.network.employee_delete_doctor"
  action: ALLOW
}

// Regeln zum Erstellen eines Reports
rule EmployeeCreateAsset {    
  description: "Allow employee to create a report Asset."    
  participant: "org.oshealthrec.network.Employee"    
  operation: CREATE    
  resource: "org.hyperledger.composer.system.AddAsset"    
  action: ALLOW
}

rule EmployeeCreateReport {    
  description: "Allow employee to create report"    
  participant: "org.oshealthrec.network.Employee"    
  operation: CREATE    
  resource: "org.oshealthrec.network.Report"    
  action: ALLOW
}

// Regeln um einen Report zum Reports-Array des Patienten hinzuzufügen
rule EmployeeAddReportforPatientTransaction {    
  description: "Allow employee to create add_report_for_patient transaction."   
  participant: "org.oshealthrec.network.Employee"    
  operation: CREATE    
  resource: "org.oshealthrec.network.add_report_for_patient"    
  action: ALLOW
}

rule EmployeeAddReportforPatient {    
  description: "Allow employee to write report into his doctor's patient´s reports array."    
  participant(p): "org.oshealthrec.network.Employee"    
  operation: UPDATE    
  resource(v): "org.oshealthrec.network.Patient"    
  transaction(tx): "org.oshealthrec.network.add_report_for_patient"    
  // Suche im doctors Array des Patienten nach dem Doctor      
  condition: (
    v.doctors.some(function (doctor) {
      return doctor.employees.some(function (employee) {
        return employee.getIdentifier() === p.getIdentifier();
      })
    })
  )
  action: ALLOW
}

/**
 * System-Regeln
 */
rule AllSystem {
  description: "Grant all members full access to system resources"
  participant: "org.oshealthrec.network.*"
  operation: READ
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

rule HistorianRecord {
  description: "Grant all members full create access to HistorianRecords"
  participant: "org.oshealthrec.network.*"
  operation: CREATE
  resource: "org.hyperledger.composer.system.HistorianRecord"
  action: ALLOW
}

rule NetworkAdminUser {
  description: "Grant business network administrators full access to user resources"
  participant: "org.hyperledger.composer.system.NetworkAdmin"
  operation: ALL
  resource: "**"
  action: ALLOW
}

rule NetworkAdminSystem {
  description: "Grant business network administrators full access to system resources"
  participant: "org.hyperledger.composer.system.NetworkAdmin"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}