/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


rule PatientReadOwn {
  description: "Grant Patient READ access to own profil."
    participant(p): "org.oshealthrec.network.Patient"
    operation: READ
    resource(v): "org.oshealthrec.network.Patient"
      condition: (v.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule DoctorReadOwn {
  description: "Grant Doctor READ access to own profil."
    participant(p): "org.oshealthrec.network.Doctor"
    operation: READ
    resource(v): "org.oshealthrec.network.Doctor"
      condition: (v.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule EmployeeReadOwn {
  description: "Grant Patient READ access to own profil."
    participant(p): "org.oshealthrec.network.Employee"
    operation: READ
    resource(v): "org.oshealthrec.network.Employee"
      condition: (v.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule DoctorReadHisPatients {
  description: "Grant Doctor READ access to his patients profil."
    participant(p): "org.oshealthrec.network.Doctor"
    operation: READ
    resource(v): "org.oshealthrec.network.Patient"
      // Suche im doctors Array des Patienten nach dem Doctor
      condition: (
        v.doctors.some(function (doctor) {
            return doctor.getIdentifier() === p.getIdentifier();
        })
      )
    action: ALLOW
}

rule EmployeeReadHisDoctors {
  description: "Grant Employee READ access to his doctors profil."
    participant(p): "org.oshealthrec.network.Employee"
    operation: READ
    resource(v): "org.oshealthrec.network.Doctor"
      // Suche im employees Array des doctors nach dem employee
      condition: (
        v.employees.some(function (employee) {
            return employee.getIdentifier() === p.getIdentifier();
        })
      )
    action: ALLOW
}

rule EmployeeReadHisPatients {
  description: "Grant Employee READ access to his doctors patients profil."
    participant(p): "org.oshealthrec.network.Employee"
    operation: READ
    resource(v): "org.oshealthrec.network.Patient"
      // Suche im doctors Array des Patienten nach dem Doctor
      condition: (
        v.doctors.some(function (doctor) {
          return doctor.employees.some(function (employee) {
            return employee.getIdentifier() === p.getIdentifier();
          })
        })
      )
    action: ALLOW
}

rule PatientAddHimself {
    description: "Allow patient to write himself into the doctor's patient array."
    participant(p): "org.oshealthrec.network.Patient"
    operation: UPDATE
    resource(v): "org.oshealthrec.network.Doctor"
    transaction(tx): "org.oshealthrec.network.doctor_add_patient"
    condition: (tx.patient.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule PatientDeleteDoctorFromArray{
    description: "Allow patient to delete Doctor from the patient´s doctor array."
    participant(p): "org.oshealthrec.network.Patient"
    operation: UPDATE
    resource(v): "org.oshealthrec.network.Patient"
    transaction(tx): "org.oshealthrec.network.patient_delete_doctor"
    condition: (tx.patient.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule PatientAddDoctorToArray{
    description: "Allow patient to write Doctor into the patient´s doctor array."
    participant(p): "org.oshealthrec.network.Patient"
    operation: UPDATE
    resource(v): "org.oshealthrec.network.Patient"
    transaction(tx): "org.oshealthrec.network.patient_add_doctor"
    condition: (tx.patient.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule DoctorAddPatient {
    description: "Allow patient create doctor_add_patient transaction."
    participant: "org.oshealthrec.network.Patient"
    operation: CREATE
    resource: "org.oshealthrec.network.doctor_add_patient"
    action: ALLOW
}

rule PatientAddDoctor {
    description: "Allow patient create patient_add_doctor transaction."
    participant: "org.oshealthrec.network.Patient"
    operation: CREATE
    resource: "org.oshealthrec.network.patient_add_doctor"
    action: ALLOW
}

rule PatientDeleteDoctor {
    description: "Allow patient create patient_delete_doctor transaction."
    participant: "org.oshealthrec.network.Patient"
    operation: CREATE
    resource: "org.oshealthrec.network.patient_delete_doctor"
    action: ALLOW
}

rule PatientReadDoctor {
    description: "Allow patient to read doctor."
    participant: "org.oshealthrec.network.Patient"
    operation: READ
    resource: "org.oshealthrec.network.Doctor"
    action: ALLOW
}

rule DoctorAddEmployee {
    description: "Allow doctor to create doctor_add_employee transaction."
    participant: "org.oshealthrec.network.Doctor"
    operation: CREATE
    resource: "org.oshealthrec.network.doctor_add_employee"
    action: ALLOW
}

rule DoctorAddEmployeeToArray{
    description: "Allow doctor to write employee into the doctors´s employee array."
    participant(p): "org.oshealthrec.network.Doctor"
    operation: UPDATE
    resource(v): "org.oshealthrec.network.Doctor"
    transaction(tx): "org.oshealthrec.network.doctor_add_employee"
    condition: (tx.doctor.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule DoctorDeleteEmployee {
    description: "Allow doctor to create doctor_delete_employee transaction."
    participant: "org.oshealthrec.network.Doctor"
    operation: CREATE
    resource: "org.oshealthrec.network.doctor_delete_employee"
    action: ALLOW
}

rule DoctorDeleteEmployeeFromArray{
    description: "Allow doctor to delete employee from the doctors´s employee array."
    participant(p): "org.oshealthrec.network.Doctor"
    operation: UPDATE
    resource(v): "org.oshealthrec.network.Doctor"
    transaction(tx): "org.oshealthrec.network.doctor_delete_employee"
    condition: (tx.doctor.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule DoctorReadEmployee {
    description: "Allow doctor to read employee."
    participant: "org.oshealthrec.network.Doctor"
    operation: READ
    resource: "org.oshealthrec.network.Employee"
    action: ALLOW
}



rule EmployeeAddDoctor {
    description: "Allow employee to create employee_add_doctor transaction."
    participant: "org.oshealthrec.network.Employee"
    operation: CREATE
    resource: "org.oshealthrec.network.employee_add_doctor"
    action: ALLOW
}

rule EmployeeAddDoctorToArray{
    description: "Allow employee to write doctor into the employee´s doctor array."
    participant(p): "org.oshealthrec.network.Employee"
    operation: UPDATE
    resource(v): "org.oshealthrec.network.Employee"
    transaction(tx): "org.oshealthrec.network.employee_add_doctor"
    condition: (tx.employee.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule EmployeeReadDoctor{
    description: "Allow employee to read doctor."
    participant: "org.oshealthrec.network.Employee"
    operation: READ
    resource: "org.oshealthrec.network.Doctor"
    action: ALLOW
}

rule EmployeeDeleteDoctor {
    description: "Allow employee to create employee_delete_doctor transaction."
    participant: "org.oshealthrec.network.Employee"
    operation: CREATE
    resource: "org.oshealthrec.network.employee_delete_doctor"
    action: ALLOW
}

rule EmployeeDeleteDoctorToArray{
    description: "Allow employee to delete doctor from the employee´s doctor array."
    participant(p): "org.oshealthrec.network.Employee"
    operation: UPDATE
    resource(v): "org.oshealthrec.network.Employee"
    transaction(tx): "org.oshealthrec.network.employee_delete_doctor"
    condition: (tx.employee.getIdentifier() == p.getIdentifier())
    action: ALLOW
}


rule AllSystem {
    description: "Grant all members full access to system resources"
    participant: "org.oshealthrec.network.*"
    operation: READ
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}


rule HistorianRecord {
    description: "Grant all members full create access to HistorianRecords"
    participant: "org.oshealthrec.network.*"
    operation: CREATE
    resource: "org.hyperledger.composer.system.HistorianRecord"
    action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}




